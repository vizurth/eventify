
services:
  postgres:
    container_name: postgres_container_for_eventify
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1234
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - app_network
  app:
    build:
      context: ../..
      dockerfile: ../../docker/Dockerfile
    container_name: app
    ports:
      - "8081:8081"
      - "8082:8082"
      - "8083:8083"
      - "8084:8084"
    depends_on:
      - postgres
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx-gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      - app_network
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    ports:
      - "2181:2181"
    networks:
      - app_network

  kafka:
    image: bitnami/kafka:3.4.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ENABLE_KRAFT: "no"   # Отключаем KRaft, используем zookeeper
    depends_on:
      - zookeeper
    networks:
      - app_network

volumes:
    postgres:

networks:
  app_network:
    driver: bridge

