version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1234
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "root"]
      interval: 5s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: ../..
      dockerfile: build/docker/auth.Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started

  event-service:
    build:
      context: ../..
      dockerfile: build/docker/event.Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started

  userinteract-service:
    build:
      context: ../..
      dockerfile: build/docker/userinteract.Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started

  notification-service:
    build:
      context: ../..
      dockerfile: build/docker/notification.Dockerfile
    depends_on:
      kafka:
        condition: service_started

volumes:
  pgdata:
