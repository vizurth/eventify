
volumes:
  postgres_data:
  zookeeper_data:
  zookeeper_datalog:
  kafka_500:

services:
  postgres:
    image: postgres:14
    env_file:
      - ../../configs/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  migrator:
    build:
      context: ../../
      dockerfile: build/docker/migrator.Dockerfile
    restart: on-failure
    depends_on:
      - postgres
  auth:
    build:
      context: ../../
      dockerfile: build/docker/auth.Dockerfile
    container_name: auth-service
    restart: on-failure
    ports:
      - "9091:9091"
    depends_on:
      - postgres
  event:
    build:
      context: ../../
      dockerfile: build/docker/event.Dockerfile
    restart: on-failure
    container_name: event-service
    ports:
      - "9092:9092"
    depends_on:
      - postgres
      - kafka
  user-interact:
    build:
      context: ../../
      dockerfile: build/docker/user-interact.Dockerfile
    restart: on-failure
    container_name: user-interact-service
    ports:
      - "9093:9093"
    depends_on:
      - postgres
      - kafka
  notification:
    build:
      context: ../../
      dockerfile: build/docker/notification.Dockerfile
    restart: on-failure
    container_name: notification-service
    ports:
      - "9095:9095"
    depends_on:
      - postgres
      - kafka
  gateway:
    build:
      context: ../../
      dockerfile: build/docker/gateway.Dockerfile
    restart: on-failure
    container_name: gateway-service
    ports:
      - "9097:9097"
    depends_on:
      - postgres
      - kafka
      - auth
      - event
      - user-interact

#  swagger-ui:
#    build:
#      context: ../../
#      dockerfile: build/docker/swagger.Dockerfile
#    container_name: swagger-ui
#    ports:
#      - "9098:8080"   # Swagger UI будет доступен на localhost:9098
#    depends_on:
#      - gateway

  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    container_name: swagger-ui
    ports:
      - "9098:8080"
    environment:
      SWAGGER_JSON: ""
      URLS: '[{"name":"Auth","url":"/swagger/auth.swagger.json"},{"name":"Event","url":"/swagger/event.swagger.json"},{"name":"UserInteract","url":"/swagger/user-interact.swagger.json"}]'
    volumes:
      - ../../swagger/docs:/usr/share/nginx/html/swagger:ro

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9094
    depends_on:
      - kafka

  zookeeper:
    image: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper_data:/data
      - zookeeper_datalog:/datalog

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9094:9094"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9094
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
    - zookeeper
    volumes:
      - kafka_500:/kafka/logs